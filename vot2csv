#! /usr/bin/env python

import sys
import os
import logging

from pathlib import Path
from astropy.io import votable

flag = f"""vot2csv v0.1
zerg <anonzerg@proton.me>


description: script to convert votable files to csv files.
usage: {sys.argv[0]} path_to_votable"""

logging.basicConfig(format="[%(levelname)s] %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

def main() -> None:

    if len(sys.argv) != 2:
        print(flag)
        sys.exit(1)

    input_file = Path(sys.argv[1])
    if input_file.suffix != ".vot":
        logger.error(f"input should be votable.")
        sys.exit(1)

    try:
        first_table = votable.parse(input_file).get_first_table()
    except FileNotFoundError:
        logger.error(f"{input_file} not found!")
        sys.exit(1)
    except Exceptoion:
        logger.error(f"parsing failed!", exc_info=True)
        sys.exit(1)
    else:
        logger.info("votable parsed successfully.")

    try:
        table = first_table.to_table(use_names_over_ids=True)
        df = table.to_pandas()
        #df = df[df["Name"] == input_file.stem]
    except ValueError:
        logger.error("failed to convert votable to pandas DataFrame!", exc_info=True)
        sys.exit(1)
    else:
        logger.info(f"votable converted to DataFrame.")
        #print(df.describe())

    base, _ = os.path.splitext(input_file)
    output_file = base + ".csv"

    try:
        df.to_csv(output_file, index=False)
    except OSError as e:
        logger.error(f"failed to write file {output_name}!", exc_info=True)
        sys.exit(1)
    else:
        logger.info(f"DataFrame saved as csv: {output_file}")

    print("[Info] done.")

    return

if __name__ == "__main__":
    main()

